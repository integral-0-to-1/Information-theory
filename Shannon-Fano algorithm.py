from math import ceil
from prettytable import PrettyTable


def draw(obj: list, first_row):
    x = PrettyTable()
    x.field_names = first_row
    for val in obj:
        x.add_row(val)
    print(x)


message = "122333444455555666666777777788888888999999999"
# message = "Shannon-Fano algorithm"
# message = r"У четвер четвертого числа о четвертій дня у центрі столиці садівник розсадівникувався. Та так розсадівникувався, що разом з садом троянд висадив ще й сад азалій, сад каприфолій та розарій у садочку навпроти, потім ще навпроти, та ще навпроти. Там, де росла липа біля Пилипа, який жив із Пилипицею та пилипеленятами. Якраз із пилипеленятами у цей час пиляв Пилип поліна з лип. Притупив пилку Пилип. А потім Пилип і Пилипко поливали липки. Виросли липки й у Пилипа, й у Пилипка. А Пилипиця напекла пироги перепечені, перцем переперчені. Бо була засмучена, змучена та вимучена тим, що всю ніч миші в шафі шаруділи, шість шарфів шерстяних з`їли. І хотіла влізти в шафу кішка, там де шурхотить у шафі мишка. Але мишка раз прийшла до кішки, уклонилась кішці в ніжки, кішці – смішки, мишці – нітрішки. Та обидва потім так вимокли-перемокли під жахливою зливою під кущем, з жуком та джмелем, що здружилися. Тому був собі коточок, украв собі клубочок – та й сховався в куточок. А Пилипиха плакала-неплакала, їй плакати – нема коли. Та так з відчаю, що шарфи з’їли, голосила-переголосила, що заболіло горло в господині, бо багато говорила, переговорила, перенаговорювала на мишку, кішку, й сусідську кішку й мишку, та ще й шишки на сосні та шахи на столі. І побігла стежинами, поміж ожинами, туди, де у діброві – дуби, під дубами – гриби, трава – між грибами, хмарки – над дубами. Й млин стоїть, скоро не вистоїть. Прилетіли горобці – говорили про крупці; не про крупці, не про крупицю, а про круп’ячко. От і набрала Пилипиця на млинІ борошна та крупячка жменями й торбинами. А на пагорбі одна торба впала та котилася з високого горбА, в торбі паляниця Пилипу й Пилипиці. Пилип знизу верещить, Пилипиця зверху пищить, торбина тріщить. Одначе котилася вона, не перекотилася, тріщала, та не тріснула. Як раз у цей час їхала Хима до Максима візком-тарадайкою; тарадайка торохкоче, сива кобила везти не хоче. Бо підкова клокоче. Наче лелека до лелеченят летіла й клекотіла. От біля тарадайки з її хазяйкою й спіймала Пилипиця торбицю. А поруч чорно-білий чорногуз у болото чорне вгруз і чапля сохла, чапля чахла, чапля здохла. Дорогою Пилипиця зупинилася біля броду, біля саду, там, де бабин виораний город. Де барабанять по городу бараболя та горох. А горох у городі виріс небувалий, одначе горобці город пограбували. Одне втішило, що бабин біб розцвів у дощ. Буде бабі біб у борщ. Набрала й бобів собі господиня, й гороху. А трохи далі в горішнику горішенька горішками обвішана. Обтрушують горішки Орішка та Тимішка. Попросила в малих малу жменю малих горіхів для милих своїх малих. Їхній батько Гриць ніс горіх через поріг. Став на горіх, упав на поріг. Тому що всю ніч пильно поле пильнував, перепелів полював. А Пилипиця згадала, як приснивсь сьогодні сон сусідці, що приніс їй сусіда сік з суниці. То вона вже за суницю не питала, лише горіхів повну жменю набрала. Й побігла знов Пилипиця поміж ожинами назад стежинами додому, щоб напекти для синів-молодців свіженьких млинців, пироги ж були – перепечені, перцем переперчені. А вона ж, мов та квочка, що ходить коло кілочка, водить діточок коло квіточок, над своїми синами носиться без устану. Тому за годину були у печі смачні та гарячі пшеничні калачі. Зі свіжою ожиною, бабиними бобами, горохом та сиром з горіхами з горішника, що збирали Тимошка й Оришка. І хвалили молодці ті млинці на молоці і гарячі калачі, що пеклися у печі. Коржі – з медом, коржі – з маком, і смаженя – з пастернаком, і галушкИ – з лютим перцем, господиню з добрим серцем, що ще й сусідам усім за спасибі дала ще й хрону, дала риби, мАківку – до мачини, перченятко – до перчини. А потім чорним вечором пригощала й синів, і гостей чаєм з печивом. А дідусь Опанас купив ананас. Кликав: “Приходьте до нас – почастуємо вас!”. А Пилипиця стільки наготувала-переготувала, що не до ананасів їй було, і вона кликала-перекликала усіх сусідів та їхніх сусідів із сусідніх дворів до себе, та накликала усе місто. Їли-їли – не переїли, та ще й на завтра лишилося. Тож хочеш їсти калачі – не лежи на печі! От такий вийшов бенкет на весь світ, а все через того садівника, що розсадівникувався своєю розсадою троянд."

alphabet = set()
for i in message:
    alphabet.add(i)

message_data = dict.fromkeys(alphabet, 0)

for i in message_data:
    message_data[i] = message.count(i)

message_data = dict(sorted(message_data.items(), key=lambda values: values[1], reverse=True))
coding_table_dict = dict.fromkeys(message_data.keys(), "")


def transformer(obj: dict, table: dict, ceiling: int, floor: int):
    if ceiling + 1 == floor or ceiling == floor:
        return

    arithmetic_mean = ceil(sum((list(obj.values())[ceiling:floor])) / 2)
    mid_point = ceiling + int((floor - ceiling) / 2)
    approx_mid = 0

    for i in range(ceiling, floor):

        if abs(arithmetic_mean - approx_mid) >= abs(arithmetic_mean - (approx_mid + list(obj.values())[i])):
            approx_mid += list(obj.values())[i]
        else:
            mid_point = i
            break

    for j in range(ceiling, mid_point):
        table[list(obj.keys())[j]] += "0"

    for k in range(mid_point, floor):
        table[list(obj.keys())[k]] += "1"

    transformer(obj, table, ceiling, mid_point)
    transformer(obj, table, mid_point, floor)


transformer(message_data, coding_table_dict, 0, len(message_data))

decoded_table_dict = dict(zip(coding_table_dict.values(), coding_table_dict.keys()))


def coder(text: str, coding_table: dict):
    coded_message = ""
    for i in text:
        coded_message += coding_table[i]
    return coded_message


def decoder(coded_message: str, decode_table: dict):
    decoded_message = ""
    bin_word = ""
    for i in range(len(coded_message) + 1):
        try:
            decoded_message += decode_table[bin_word]
            bin_word = coded_message[i]
        except KeyError:
            bin_word += coded_message[i]
        except IndexError:
            pass
    return decoded_message


tabl_len = len(alphabet) * 8 + sum(map(lambda x: len(x), coding_table_dict.values()))

print("Вхідне повідомлення:\n" + message)
draw([message_data.values(), coding_table_dict.values()], message_data.keys())
print("Повідомлення після кодування:\n" + coder(message, coding_table_dict))
print(f"Довжина закодованого повідомлення дорівнює {len(coder(message, coding_table_dict))} біт + {tabl_len} біт таблиці")
print("Повідомлення після декодування:\n" + decoder(coder(message, coding_table_dict), decoded_table_dict))
print(f"Довжина декодованого(вхідного) повідомлення дорівнює {len(decoder(coder(message, coding_table_dict), decoded_table_dict)) * 8} біт")
